apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId 'com.lauszus.facerecognitionapp'
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 6
        versionName '1.2.3'
        vectorDrawables.useSupportLibrary = true
        ndk {
            stl 'c++_static'
            cFlags '-std=gnu++11 -fexceptions -frtti -DANDROID_STL=c++_static'
        }
        setProperty('archivesBaseName', rootProject.name + '-' + defaultConfig.versionName)
    }
    splits {
        abi {
            enable true
            reset()
            universalApk true
            include 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }
    project.ext.abiCodes = ['armeabi-v7a': 1, 'arm64-v8a': 2, 'x86': 3, 'x86_64': 4]
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def baseAbiVersionCode = project.ext.abiCodes.get(output.getFilter(com.android.build.OutputFile.ABI))
            // Because abiCodes.get() returns null for ABIs that are not mapped by ext.abiCodes,
            // the following code does not override the version code for universal APKs.
            if (baseAbiVersionCode != null) {
                output.versionCodeOverride = baseAbiVersionCode * 1000000 + variant.versionCode
            }
        }
        if (variant.getBuildType().isMinifyEnabled()) {
            variant.assemble.doLast {
                variant.mappingFile.renameTo(variant.mappingFile.parent +
                        "/$archivesBaseName-$variant.baseName-mapping.txt")
            }
        }
    }
    signingConfigs {
        release
    }
    buildTypes {
        debug {
            jniDebuggable true
            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=1', 'NDEBUG=null'
                }
            }
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    externalNativeBuild {
        ndkBuild {
            path 'src/main/cpp/Android.mk'
        }
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    //dialog
    implementation 'com.github.d-max:spots-dialog:1.1@aar'

    //appintro
    implementation 'com.github.AppIntro:AppIntro:4.2.3'

    //lombok
    implementation 'org.projectlombok:lombok:1.18.6'
    implementation 'com.google.android.gms:play-services-maps:16.1.0'
    annotationProcessor 'org.projectlombok:lombok:1.18.6'

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.okhttp3:okhttp:3.14.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.1'

    implementation files('libs/activation.jar')
    implementation files('libs/additionnal.jar')
    implementation files('libs/mail.jar')
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation project(':opencv')
//    implementation project(path: ':openCVLibrary341')
}

// These values are all set in my global gradle.properties file
if (project.hasProperty('storeFile') && project.hasProperty('storePassword') && project.hasProperty('keyAlias') && project.hasProperty('keyPassword')) {
    android.signingConfigs.release.storeFile = file(storeFile)
    android.signingConfigs.release.storePassword = storePassword
    android.signingConfigs.release.keyAlias = keyAlias
    android.signingConfigs.release.keyPassword = keyPassword
} else {
    android.buildTypes.release.signingConfig = null
}
